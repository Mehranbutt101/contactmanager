{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/pages/About.js","components/pages/NotFound.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","a","delete","name","email","phone","className","style","cursor","onClick","bind","float","color","to","marginRight","Contacts","key","Header","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","TextInputGroup","EditContact","updateContact","match","params","put","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cede1adc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state , action) => {\r\n    switch (action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.map(contact => \r\n                    contact.id === action.payload.id ?\r\n                    (contact=action.payload): contact)\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => {\r\n            this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n        this.setState({contacts: res.data})\r\n            \r\n    }\r\n\r\n    render (){\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React , {Component} from 'react'\r\n\r\nimport { Consumer } from '../../context';\r\n\r\nimport axios from 'axios';\r\n\r\nimport { Link } from 'react-router-dom';\r\n \r\nclass Contact extends Component{\r\n\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n\r\n    onShowClick = () => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo});\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => { \r\n        try{\r\n            await axios.delete('https://jsonplaceholder.typicode.com/users/'+id)\r\n        }catch(e){}\r\n        dispatch({type:'DELETE_CONTACT', payload: id})\r\n    }\r\n    render(){\r\n\r\n        const {id, name, email, phone} = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className='card card-body mb-3'>\r\n                            <h4>{name} <i \r\n                            style = {{ cursor: 'pointer'}}\r\n                            onClick={this.onShowClick}\r\n                            className=\"fas fa-sort-down\"></i>\r\n                            <i className=\"fas fa-times\"\r\n                            onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                            style = {{ cursor: 'pointer', float: 'right', color: 'red'}}></i>\r\n                            <Link to={ `contact/edit/${id}`}>\r\n                                <i \r\n                                    style = {{ cursor: 'pointer', float: 'right', color: 'black', marginRight: '1rem'}}\r\n                                    className=\"fas fa-pencil-alt\"></i>\r\n                            </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                            <ul className='list-group'>\r\n                                <li className='list-group-item'>Email: {email}</li>\r\n                                <li className='list-group-item'>Phone: {phone}</li>\r\n                            </ul>): null\r\n                            }\r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\n\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    \r\n\r\n\r\n    render(){\r\n\r\n        return (\r\n            <Consumer>\r\n                { value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <div>\r\n                            <h1 className='display-4 mb-2'>\r\n                                <span className='text-danger'>Contact List</span>\r\n                                \r\n                            </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ) )}\r\n                        </div>\r\n                    );\r\n                } }\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    return(\r\n        <nav className='navbar navbar-expand-sm\r\n        navbar-dark bg-danger mb-3 py-0'>\r\n            <div className='container'>\r\n                <Link to='/' className='navbar-brand'>\r\n                    Contact Manager\r\n                </Link>\r\n                <div>\r\n                    <ul className='navbar-nav mr-auto'>\r\n                        <li className='nav-item'>\r\n                            <Link to='/' className='nav-link'>\r\n                                <i className='fas fa-home' /> Home</Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/contact/add' className='nav-link'>\r\n                                <i className='fas fa-plus' /> Add</Link>\r\n                        </li>\r\n                        <li className='nav-item'>\r\n                            <Link to='/about' className='nav-link'>\r\n                                <i className='fas fa-info-circle' /> About</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n\r\n\r\n        \r\n    );\r\n\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nimport classnames from 'classnames';\r\n\r\nexport default (\r\n    {label, name, value, placeholder, type, onChange, error}\r\n) => {\r\n\r\n    return (\r\n            <div className='form-group'>\r\n                <label htmlFor={name}>{label}</label>\r\n                <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames(\r\n                    'form-control form-control-lg',\r\n                    {\r\n                        'is-invalid':error\r\n                    }\r\n                )}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n                />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport {Consumer} from '../../context';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState(\r\n            {\r\n                [e.target.name]: e.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n        \r\n        if (name === ''){\r\n            this.setState({errors:{name:'Name is Required'}})\r\n            return;\r\n        }\r\n        if (email === ''){\r\n            this.setState({errors:{email:'Email is Required'}})\r\n            return;\r\n        }\r\n        if (phone === ''){\r\n            this.setState({errors:{phone:'Phone is Required'}})\r\n            return;\r\n        }\r\n        \r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users',\r\n            newContact)\r\n        dispatch({type:'ADD_CONTACT',payload:res.data});\r\n\r\n        \r\n\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch }= value;\r\n                    return(\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>\r\n                                Add Contact\r\n                            </div>\r\n\r\n\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label = 'Name'\r\n                                        name = 'name'\r\n                                        placeholder = 'Enter Name'\r\n                                        value = {name}\r\n                                        type = 'text'\r\n                                        onChange = {this.onChange}\r\n                                        error = {errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = 'Email'\r\n                                        name = 'email'\r\n                                        placeholder = 'Enter Email'\r\n                                        value = {email}\r\n                                        type = 'email'\r\n                                        onChange = {this.onChange}\r\n                                        error = {errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = 'Phone'\r\n                                        name = 'phone'\r\n                                        type = 'text'\r\n                                        placeholder = 'Enter Phone'\r\n                                        value = {phone}\r\n                                        onChange = {this.onChange}\r\n                                        error = {errors.phone}\r\n                                    />\r\n                                    <input type='submit'\r\n                                    value='Add Contact'\r\n                                    className='btn btn-light btn-block'\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\nexport default AddContact","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className='display-4'>\r\n                About Contact Manager \r\n            </h1>\r\n            <p className='lead'>Simple app to manage Contacts</p>\r\n            <p className='text-secondary'>Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4 text-danger\">404 Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, the page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport {Consumer} from '../../context';\r\n\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        })\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState(\r\n            {\r\n                [e.target.name]: e.target.value\r\n            }\r\n        );\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n\r\n        const { name, email, phone} = this.state;\r\n        \r\n        if (name === ''){\r\n            this.setState({errors:{name:'Name is Required'}})\r\n            return;\r\n        }\r\n        if (email === ''){\r\n            this.setState({errors:{email:'Email is Required'}})\r\n            return;\r\n        }\r\n        if (phone === ''){\r\n            this.setState({errors:{phone:'Phone is Required'}})\r\n            return;\r\n        }\r\n        \r\n        const updateContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const {id} = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updateContact);\r\n\r\n        dispatch({type:'UPDATE_CONTACT',payload:res.data});\r\n\r\n\r\n\r\n        \r\n\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/')\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const {name, email, phone, errors} = this.state;\r\n\r\n\r\n        return(\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch }= value;\r\n                    return(\r\n                        <div className='card mb-3'>\r\n                            <div className='card-header'>\r\n                                Edit Contact\r\n                            </div>\r\n\r\n\r\n                            <div className='card-body'>\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label = 'Name'\r\n                                        name = 'name'\r\n                                        placeholder = 'Enter Name'\r\n                                        value = {name}\r\n                                        type = 'text'\r\n                                        onChange = {this.onChange}\r\n                                        error = {errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = 'Email'\r\n                                        name = 'email'\r\n                                        placeholder = 'Enter Email'\r\n                                        value = {email}\r\n                                        type = 'email'\r\n                                        onChange = {this.onChange}\r\n                                        error = {errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label = 'Phone'\r\n                                        name = 'phone'\r\n                                        type = 'text'\r\n                                        placeholder = 'Enter Phone'\r\n                                        value = {phone}\r\n                                        onChange = {this.onChange}\r\n                                        error = {errors.phone}\r\n                                    />\r\n                                    <input type='submit'\r\n                                    value='Update Contact'\r\n                                    className='btn btn-light btn-block'\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n\r\n    }\r\n}\r\nexport default EditContact","import React from 'react';\nimport './App.css'; \nimport Contacts from './components/contacts/Contacts';\nimport Header from './components/layout/Header'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Provider } from './context'\nimport AddContact from './components/contacts/AddContact';\n\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\n\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport EditContact from './components/contacts/EditContact';\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n            <Header/>\n            <div className='container'>\n              <Switch>\n                <Route exact path='/'\n                component={Contacts} />\n                <Route exact path='/contact/add'\n                component={AddContact} />\n                <Route exact path='/contact/edit/:id'\n                component={EditContact} />                \n                <Route exact path='/about'\n                component={About} /> \n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n            \n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}